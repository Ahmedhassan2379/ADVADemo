// <auto-generated />
using System;
using ADVADemo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADVADemo.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20241028181150_UpdateDepartmentData")]
    partial class UpdateDepartmentData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ADVADemo.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = 0,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = 0,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("ADVADemo.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            IsDeleted = 0,
                            Name = "Alice",
                            Salary = 60000m
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            IsDeleted = 0,
                            Name = "Bob",
                            Salary = 70000m
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            IsDeleted = 0,
                            ManagerId = 1,
                            Name = "Charlie",
                            Salary = 40000m
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            IsDeleted = 0,
                            ManagerId = 2,
                            Name = "Dave",
                            Salary = 45000m
                        });
                });

            modelBuilder.Entity("ADVADemo.Domain.Entities.Department", b =>
                {
                    b.HasOne("ADVADemo.Domain.Entities.Employee", "Manager")
                        .WithOne()
                        .HasForeignKey("ADVADemo.Domain.Entities.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ADVADemo.Domain.Entities.Employee", b =>
                {
                    b.HasOne("ADVADemo.Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADVADemo.Domain.Entities.Employee", "Manager")
                        .WithMany("EmployeesUnderManger")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ADVADemo.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ADVADemo.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeesUnderManger");
                });
#pragma warning restore 612, 618
        }
    }
}
